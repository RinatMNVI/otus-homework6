server:
  error:
    include-message: always
spring:
  main:
    banner-mode: off
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/public}
    username: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate.default_schema: ${spring.liquibase.default-schema}
  liquibase:
    change-log: classpath:/liquibase/db.changelog-master.xml
    default-schema: ${DB_SCHEMA:public}
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 0x7fffffff # Integer.MAX_VALUE
    consumer:
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: "*"
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: ${KAFKA_CONSUMER_GROUP_ID:MARKET_GROUP}
  cloud:
    kubernetes:
      enabled: ${KUBERNETES_ENABLED:true}
      discovery:
        all-namespaces: true
        include-not-ready-addresses: true